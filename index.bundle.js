!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e){e.exports=JSON.parse('[{"title":"Research Dissemination","description":"Conducting novel research requires deep understanding and expertise in a specific area. Once achieved, researchers continue contributing new knowledge for future people to use and build upon. Over time, this consistent addition of new knowledge can build up, contributing to what some have called research debt [olah2017research]. Not everyone is an expert in every field, and it can be easy to lose perspective and forget the bigger picture [matt might]. Yet research should be understood by many. Interactive articles can be used to distill the latest progress in various research fields and make their methods and results accessible and understandable to a broader audience.","opportunities":["Engage and excite broader audience with latest research progress","Remove research debt, onboard new researchers","Make faster and clearer research progress"],"challenges":["No clear incentive structure for researchers","Little funding for bespoke research dissemination and communication","Not seen as a legitimate research contribution (e.g., to field, or one’s career)"],"examples":[{"title":"Attacking Discrimination with Smarter Machine Learning","description":"This companion piece to a traditional research paper uses interactive graphics to let readers adjust a machine learning model’s behavior and visualize results for a loan granting scenario.","url":"https://research.google.com/bigpicture/attacking-discrimination-in-ml/","image":"research-ex1.png"},{"title":"Coeffects: Context-aware Programming Languages","description":"This PhD thesis contributes a programming language abstraction for understanding how programs access the context or environment in which they execute, and walks readers through the work using two simple context-aware languages with live in-browser demos.","url":"http://tomasp.net/coeffects/","image":"research-ex2.png"},{"title":"What is Complexity Science?","description":"A crash course in complex systems science, created by leading experts, practitioners, and students in the field, with accompanying interactive sandboxes to simulate, control, and visualize different complex systems.","url":"https://complexityexplained.github.io/","image":"research-ex3.png"}]},{"title":"Journalism","description":"An informed public strengthens society. While many newsworthy and current events are reported daily, unfortunately the complexity and nuance of such topics are lost in the wildfire sharing of short headlines. This is effective dissemination without context. Yet many of the most impactful stories require a deep understanding of the various locations, personale, and perspectives involved. Interactive articles can be used to breakdown these complex topics into more approachable pieces, show their connections in relation to the main message, highlight the impact of investigate reports, and inform a wide readership of current events and impactful stories.","opportunities":["Tell stories from multiple dynamic perspectives and levels of detail","Highlight importance of a story or report","TK"],"challenges":["Require active reading in a reader that may be expecting bite-sized news","Many readers viewing on mobile devices requires responsive design","TK"],"examples":[{"title":"What’s Really Warming the World?","description":"A segmented-story that layers different natural and industrial factors recorded since 1880 on the same axis to compare and contrast which factors are correlated with the increase of the global temperature rise.","url":"https://www.bloomberg.com/graphics/2015-whats-warming-the-world/","image":"placeholder.png"},{"title":"You Draw It: How Family Income Predicts Children’s College Chances","description":"An article with an empty visualization that prompts the reader to draw the line that describes the relationship between family income and the percentage of children who attend college, challenging one’s prior belief about the data.","url":"https://www.nytimes.com/interactive/2015/05/28/upshot/you-draw-it-how-family-income-affects-childrens-college-chances.html","image":"placeholder.png"},{"title":"Example 3","description":"EX 3 [uber game or gun deaths]","url":"","image":"placeholder.png"}]},{"title":"Education","description":"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam nihil doloremque facilis ab illo velit consequatur? Blanditiis, alias? Laborum quisquam ex sequi officia? Pariatur exercitationem quidem hic aliquam et sunt.","opportunities":["Reinforce learning by presenting content in multiple forms","More quickly grapple complex topics that require visual or geometric interpretations","TK"],"challenges":["TK","TK","TK"],"examples":[{"title":"Let’s Learn About Waveforms","description":"An interactive guide that introduces and explores waveforms without requiring prior knowledge. The article lets readers play with different waveforms using sound to understand their basic physics and relationship to music and harmony.","url":"https://pudding.cool/2018/02/waveforms/","image":"placeholder.png"},{"title":"The Book of Shaders","description":"A step-by-step guide that walks a reader through the notoriously challenging topic of computer graphics fragment shaders using interactive code examples.","url":"https://thebookofshaders.com/","image":"placeholder.png"},{"title":"EconGraphs","description":"While most interactive textbooks are about mathematics, this collection of key concepts from economics using interactive visualization to help econ teachers illustrate important underlying relationships within economic models.","url":"http://www.econgraphs.org/","image":"placeholder.png"}]},{"title":"Policy Making","description":"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam nihil doloremque facilis ab illo velit consequatur? Blanditiis, alias? Laborum quisquam ex sequi officia? Pariatur exercitationem quidem hic aliquam et sunt.","opportunities":["Concretize complex societal issues using experimental sandboxes","Inform public of past, present, and future policies and their impact","TK"],"challenges":["Often asks for greater numeracy and graphicacy in citizens","TK","TK"],"examples":[{"title":"To Build a Better Ballot","description":"An explorable explanation that uses direct manipulation to show election outcomes under different voting methods to provide concrete tools for voting reform.","url":"https://ncase.me/ballot/","image":"placeholder.png"},{"title":"The Atlas Of Redistricting","description":"Visualizations of the United States and its breakdown on governmental representation and gerrymandering. Interactive toggles that redraw district boundaries compare the makeup of the US House of Representatives under different goals, both partisan and bipartisan, all without a single voter moving.","url":"https://projects.fivethirtyeight.com/redistricting-maps/","image":"placeholder.png"},{"title":"Is It Better to Rent or Buy?","description":"Built into this article is an interactive calculator that suggests if a reader should buy or rent a property based on a collection of user-selected costs.","url":"https://www.nytimes.com/interactive/2014/upshot/buy-rent-calculator.html","image":"placeholder.png"}]}]')},function(e,t,n){!function(e){function t(){this.months=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],this.notKey=[",","{","}"," ","="],this.pos=0,this.input="",this.entries=new Array,this.currentEntry="",this.setInput=function(e){this.input=e},this.getEntries=function(){return this.entries},this.isWhitespace=function(e){return" "==e||"\r"==e||"\t"==e||"\n"==e},this.match=function(e,t){if(null!=t&&null!=t||(t=!0),this.skipWhitespace(t),this.input.substring(this.pos,this.pos+e.length)!=e)throw"Token mismatch, expected "+e+", found "+this.input.substring(this.pos);this.pos+=e.length,this.skipWhitespace(t)},this.tryMatch=function(e,t){return null!=t&&null!=t||(t=!0),this.skipWhitespace(t),this.input.substring(this.pos,this.pos+e.length)==e},this.matchAt=function(){for(;this.input.length>this.pos&&"@"!=this.input[this.pos];)this.pos++;return"@"==this.input[this.pos]},this.skipWhitespace=function(e){for(;this.isWhitespace(this.input[this.pos]);)this.pos++;if("%"==this.input[this.pos]&&1==e){for(;"\n"!=this.input[this.pos];)this.pos++;this.skipWhitespace(e)}},this.value_braces=function(){var e=0;this.match("{",!1);for(var t=this.pos,n=!1;;){if(!n)if("}"==this.input[this.pos]){if(!(e>0)){var i=this.pos;return this.match("}",!1),this.input.substring(t,i)}e--}else if("{"==this.input[this.pos])e++;else if(this.pos>=this.input.length-1)throw"Unterminated value";n="\\"==this.input[this.pos]&&0==n,this.pos++}},this.value_comment=function(){for(var e="",t=0;!this.tryMatch("}",!1)||0!=t;){if(e+=this.input[this.pos],"{"==this.input[this.pos]&&t++,"}"==this.input[this.pos]&&t--,this.pos>=this.input.length-1)throw"Unterminated value:"+this.input.substring(start);this.pos++}return e},this.value_quotes=function(){this.match('"',!1);for(var e=this.pos,t=!1;;){if(!t){if('"'==this.input[this.pos]){var n=this.pos;return this.match('"',!1),this.input.substring(e,n)}if(this.pos>=this.input.length-1)throw"Unterminated value:"+this.input.substring(e)}t="\\"==this.input[this.pos]&&0==t,this.pos++}},this.single_value=function(){var e=this.pos;if(this.tryMatch("{"))return this.value_braces();if(this.tryMatch('"'))return this.value_quotes();var t=this.key();if(t.match("^[0-9]+$"))return t;if(this.months.indexOf(t.toLowerCase())>=0)return t.toLowerCase();throw"Value expected:"+this.input.substring(e)+" for key: "+t},this.value=function(){var e=[];for(e.push(this.single_value());this.tryMatch("#");)this.match("#"),e.push(this.single_value());return e.join("")},this.key=function(e){for(var t=this.pos;;){if(this.pos>=this.input.length)throw"Runaway key";if(this.notKey.indexOf(this.input[this.pos])>=0)return e&&","!=this.input[this.pos]?(this.pos=t,null):this.input.substring(t,this.pos);this.pos++}},this.key_equals_value=function(){var e=this.key();if(this.tryMatch("=")){this.match("=");var t=this.value();return[e=e.trim(),t]}throw"... = value expected, equals sign missing:"+this.input.substring(this.pos)},this.key_value_list=function(){var e=this.key_equals_value();for(this.currentEntry.entryTags={},this.currentEntry.entryTags[e[0]]=e[1];this.tryMatch(",")&&(this.match(","),!this.tryMatch("}"));)e=this.key_equals_value(),this.currentEntry.entryTags[e[0]]=e[1]},this.entry_body=function(e){this.currentEntry={},this.currentEntry.citationKey=this.key(!0),this.currentEntry.entryType=e.substring(1),null!=this.currentEntry.citationKey&&this.match(","),this.key_value_list(),this.entries.push(this.currentEntry)},this.directive=function(){return this.match("@"),"@"+this.key()},this.preamble=function(){this.currentEntry={},this.currentEntry.entryType="PREAMBLE",this.currentEntry.entry=this.value_comment(),this.entries.push(this.currentEntry)},this.comment=function(){this.currentEntry={},this.currentEntry.entryType="COMMENT",this.currentEntry.entry=this.value_comment(),this.entries.push(this.currentEntry)},this.entry=function(e){this.entry_body(e)},this.alernativeCitationKey=function(){this.entries.forEach((function(e){!e.citationKey&&e.entryTags&&(e.citationKey="",e.entryTags.author&&(e.citationKey+=e.entryTags.author.split(",")[0]+=", "),e.citationKey+=e.entryTags.year)}))},this.bibtex=function(){for(;this.matchAt();){var e=this.directive();this.match("{"),"@STRING"==e.toUpperCase()?this.string():"@PREAMBLE"==e.toUpperCase()?this.preamble():"@COMMENT"==e.toUpperCase()?this.comment():this.entry(e),this.match("}")}this.alernativeCitationKey()}}e.toJSON=function(e){var n=new t;return n.setInput(e),n.bibtex(),n.entries},e.toBibtex=function(e){var t="";for(var n in e){if(t+="@"+e[n].entryType,t+="{",e[n].citationKey&&(t+=e[n].citationKey+", "),e[n].entry&&(t+=e[n].entry),e[n].entryTags){var i="";for(var r in e[n].entryTags)0!=i.length&&(i+=", "),i+=r+"= {"+e[n].entryTags[r]+"}";t+=i}t+="}\n\n"}return t}}(t)},function(e,t,n){"use strict";n.r(t);function i(){}function r(e){return e()}function a(){return Object.create(null)}function o(e){e.forEach(r)}function s(e){return"function"==typeof e}function l(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function c(e,t){const n=e.subscribe(t);return n.unsubscribe?()=>n.unsubscribe():n}function u(e,t,n){e.$$.on_destroy.push(c(t,n))}function h(e,t,n,i){if(e){const r=d(e,t,n,i);return e[0](r)}}function d(e,t,n,i){return e[1]&&i?function(e,t){for(const n in t)e[n]=t[n];return e}(n.ctx.slice(),e[1](i(t))):n.ctx}function p(e,t,n,i){if(e[2]&&i){const r=e[2](i(n));if("object"==typeof t.dirty){const e=[],n=Math.max(t.dirty.length,r.length);for(let i=0;i<n;i+=1)e[i]=t.dirty[i]|r[i];return e}return t.dirty|r}return t.dirty}function g(e){return null==e?"":e}new Set;function m(e,t){e.appendChild(t)}function f(e,t,n){e.insertBefore(t,n||null)}function v(e){e.parentNode.removeChild(e)}function y(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function b(e){return document.createElement(e)}function w(e){return document.createTextNode(e)}function x(){return w(" ")}function k(){return w("")}function E(e,t,n,i){return e.addEventListener(t,n,i),()=>e.removeEventListener(t,n,i)}function $(e,t,n){null==n?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function z(e,t){t=""+t,e.data!==t&&(e.data=t)}function C(e,t){(null!=t||e.value)&&(e.value=t)}function T(e,t,n,i){e.style.setProperty(t,n,i?"important":"")}function I(e,t,n){e.classList[n?"add":"remove"](t)}let j;function A(e){j=e}function M(){if(!j)throw new Error("Function called outside component initialization");return j}function S(e){M().$$.on_destroy.push(e)}function P(e){return M().$$.context.get(e)}const B=[],_=[],H=[],D=[],q=Promise.resolve();let K=!1;function R(){K||(K=!0,q.then(O))}function L(e){H.push(e)}function O(){const e=new Set;do{for(;B.length;){const e=B.shift();A(e),J(e.$$)}for(;_.length;)_.pop()();for(let t=0;t<H.length;t+=1){const n=H[t];e.has(n)||(n(),e.add(n))}H.length=0}while(B.length);for(;D.length;)D.pop()();K=!1}function J(e){if(null!==e.fragment){e.update(),o(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(L)}}const N=new Set;let W;function V(){W={r:0,c:[],p:W}}function G(){W.r||o(W.c),W=W.p}function F(e,t){e&&e.i&&(N.delete(e),e.i(t))}function Y(e,t,n,i){if(e&&e.o){if(N.has(e))return;N.add(e),W.c.push(()=>{N.delete(e),i&&(n&&e.d(1),i())}),e.o(t)}}"undefined"!=typeof window?window:global;new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]);let U;function X(e){e&&e.c()}function Z(e,t,n){const{fragment:i,on_mount:a,on_destroy:l,after_update:c}=e.$$;i&&i.m(t,n),L(()=>{const t=a.map(r).filter(s);l?l.push(...t):o(t),e.$$.on_mount=[]}),c.forEach(L)}function Q(e,t){const n=e.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function ee(e,t,n,r,s,l,c=[-1]){const u=j;A(e);const h=t.props||{},d=e.$$={fragment:null,ctx:null,props:l,update:i,not_equal:s,bound:a(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:a(),dirty:c};let p=!1;var g;d.ctx=n?n(e,h,(t,n,...i)=>{const r=i.length?i[0]:n;return d.ctx&&s(d.ctx[t],d.ctx[t]=r)&&(d.bound[t]&&d.bound[t](r),p&&function(e,t){-1===e.$$.dirty[0]&&(B.push(e),R(),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}(e,t)),n}):[],d.update(),p=!0,o(d.before_update),d.fragment=!!r&&r(d.ctx),t.target&&(t.hydrate?d.fragment&&d.fragment.l((g=t.target,Array.from(g.childNodes))):d.fragment&&d.fragment.c(),t.intro&&F(e.$$.fragment),Z(e,t.target,t.anchor),O()),A(u)}"function"==typeof HTMLElement&&(U=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){for(const e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(e,t,n){this[e]=n}$destroy(){Q(this,1),this.$destroy=i}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(){}});class te{$destroy(){Q(this,1),this.$destroy=i}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(){}}function ne(e){let t;return{c(){t=b("table"),t.innerHTML='<thead><tr><th class="svelte-652fg4"></th> \n      <th scope="col" class="svelte-652fg4">Research</th> \n      <th scope="col" class="svelte-652fg4">Practice</th></tr></thead> \n  <tbody><tr><th scope="row" class="svelte-652fg4">Authoring</th> \n      <td class="svelte-652fg4">Next generation tooling</td> \n      <td class="svelte-652fg4">Evaluate in production setting, identify bugs</td></tr> \n    <tr><th scope="row" class="svelte-652fg4">Designing</th> \n      <td class="svelte-652fg4">Developing theory, conducting laboratory studies</td> \n      <td class="svelte-652fg4">Evaluate specific design decisions in the wild, understand constraints</td></tr> \n    <tr><th scope="row" class="svelte-652fg4">Publishing</th> \n      <td class="svelte-652fg4">Tools, guidelines, and best practices</td> \n      <td class="svelte-652fg4">Concrete examples for others to follow, available source code, accessible archives, DOI, branding</td></tr></tbody>',$(t,"id","research-x-practice-table"),$(t,"class","svelte-652fg4")},m(e,n){f(e,t,n)},p:i,i:i,o:i,d(e){e&&v(t)}}}var ie=class extends te{constructor(e){var t;super(),document.getElementById("svelte-652fg4-style")||((t=b("style")).id="svelte-652fg4-style",t.textContent="#research-x-practice-table.svelte-652fg4.svelte-652fg4{overflow-x:scroll;width:100%}#research-x-practice-table.svelte-652fg4 th.svelte-652fg4{white-space:nowrap}#research-x-practice-table.svelte-652fg4 tbody th.svelte-652fg4{font-weight:initial;border-bottom:1px solid rgb(242, 242, 242)}#research-x-practice-table.svelte-652fg4 tbody tr:last-of-type th.svelte-652fg4{border-bottom:inherit}#research-x-practice-table.svelte-652fg4 td.svelte-652fg4{border-color:rgb(242, 242, 242)}",m(document.head,t)),ee(this,e,null,ne,l,{})}};function re(e){let t;return{c(){t=b("nav"),t.innerHTML='<h3>Contents</h3> \n    <div><a href="#introduction">Introduction</a></div> \n    <div><a href="#applications">Applications</a></div> \n    <div><a href="#experiment-1">The Capabilities of Interactive Articles</a></div> \n    <ul><li><a href="#improving-recall">Improving Recall</a></li> \n      <li><a href="#improving-engagement">Improving Engagement</a></li> \n      <li><a href="#enabling-experience">Enabling Experience</a></li> \n      <li><a href="#reducing-cognitive-load">Reducing Cognitive Load</a></li> \n      <li><a href="#personalization">Personalization</a></li></ul> \n    <div><a href="#critical-reflections">Critical Reflections</a></div> \n    <div><a href="#challenges">Challenges of Interactive Writing</a></div> \n    <div><a href="#discussion">Discussion</a></div>',$(t,"class","l-text toc figcaption")},m(e,n){f(e,t,n)},p:i,i:i,o:i,d(e){e&&v(t)}}}var ae=class extends te{constructor(e){var t;super(),document.getElementById("svelte-1s9wj4o-style")||((t=b("style")).id="svelte-1s9wj4o-style",t.textContent="@media(max-width: 1000px){d-contents{justify-self:start;align-self:start;grid-column-start:2;grid-column-end:6;padding-bottom:0.5em;margin-bottom:1em;padding-left:0.25em;border-bottom:1px solid rgba(0, 0, 0, 0.1);border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgba(0, 0, 0, 0.1)}}@media(min-width: 1000px){d-contents{align-self:start;grid-column-start:1;grid-column-end:4;justify-self:end;padding-right:3em;padding-left:2em;border-right:1px solid rgba(0, 0, 0, 0.1);border-right-width:1px;border-right-style:solid;border-right-color:rgba(0, 0, 0, 0.1)}}@media(min-width: 1180px){d-contents{grid-column-start:1;grid-column-end:4;justify-self:end;padding-right:3em;padding-left:2em;border-right:1px solid rgba(0, 0, 0, 0.1);border-right-width:1px;border-right-style:solid;border-right-color:rgba(0, 0, 0, 0.1)}}d-contents nav h3{margin-top:0;margin-bottom:1em}d-contents nav a{color:rgba(0, 0, 0, 0.8);border-bottom:none;text-decoration:none}d-contents li{list-style-type:none}d-contents ul{padding-left:1em}d-contents nav ul li{margin-bottom:.25em}d-contents nav a:hover{text-decoration:underline solid rgba(0, 0, 0, 0.6)}d-contents nav ul{margin-top:0;margin-bottom:6px}d-contents nav>div{display:block;outline:none;margin-bottom:0.5em}d-contents nav>div>a{font-size:13px;font-weight:600}d-contents nav>div>a{font-size:13px;font-weight:600}d-contents nav>div>a:hover,\n    d-contents nav>ul>li>a:hover{text-decoration:none}",m(document.head,t)),ee(this,e,null,re,l,{})}};const oe=[];function se(e,t=i){let n;const r=[];function a(t){if(l(e,t)&&(e=t,n)){const t=!oe.length;for(let t=0;t<r.length;t+=1){const n=r[t];n[1](),oe.push(n,e)}if(t){for(let e=0;e<oe.length;e+=2)oe[e][0](oe[e+1]);oe.length=0}}}return{set:a,update:function(t){a(t(e))},subscribe:function(o,s=i){const l=[o,s];return r.push(l),1===r.length&&(n=t(a)||i),o(e),()=>{const e=r.indexOf(l);-1!==e&&r.splice(e,1),0===r.length&&(n(),n=null)}}}}function le(e){let t,n;const i=e[5].default,r=h(i,e,e[4],null);return{c(){t=b("div"),r&&r.c(),$(t,"class","tabs svelte-5jhylz")},m(e,i){f(e,t,i),r&&r.m(t,null),n=!0},p(e,[t]){r&&r.p&&16&t&&r.p(d(i,e,e[4],null),p(i,e[4],t,null))},i(e){n||(F(r,e),n=!0)},o(e){Y(r,e),n=!1},d(e){e&&v(t),r&&r.d(e)}}}const ce={};function ue(e,t,n){const i=[],r=[],a=se(null),o=se(null);var s,l;s=ce,l={registerTab:e=>{i.push(e),a.update(t=>t||e),S(()=>{const t=i.indexOf(e);i.splice(t,1),a.update(n=>n===e?i[t]||i[i.length-1]:n)})},registerPanel:e=>{r.push(e),o.update(t=>t||e),S(()=>{const t=r.indexOf(e);r.splice(t,1),o.update(n=>n===e?r[t]||r[r.length-1]:n)})},selectTab:e=>{const t=i.indexOf(e);a.set(e),o.set(r[t])},selectedTab:a,selectedPanel:o},M().$$.context.set(s,l);let{$$slots:c={},$$scope:u}=t;return e.$set=e=>{"$$scope"in e&&n(4,u=e.$$scope)},[i,r,a,o,u,c]}var he=class extends te{constructor(e){var t;super(),document.getElementById("svelte-5jhylz-style")||((t=b("style")).id="svelte-5jhylz-style",t.textContent=".tabs.svelte-5jhylz{background-color:var(--gray-bg);border:solid 1px var(--gray-border);border-radius:var(--border-radius)}",m(document.head,t)),ee(this,e,ue,le,l,{})}};function de(e){let t,n;const i=e[1].default,r=h(i,e,e[0],null);return{c(){t=b("div"),r&&r.c(),$(t,"class","tab-list svelte-1s3nj47")},m(e,i){f(e,t,i),r&&r.m(t,null),n=!0},p(e,[t]){r&&r.p&&1&t&&r.p(d(i,e,e[0],null),p(i,e[0],t,null))},i(e){n||(F(r,e),n=!0)},o(e){Y(r,e),n=!1},d(e){e&&v(t),r&&r.d(e)}}}function pe(e,t,n){let{$$slots:i={},$$scope:r}=t;return e.$set=e=>{"$$scope"in e&&n(0,r=e.$$scope)},[r,i]}var ge=class extends te{constructor(e){var t;super(),document.getElementById("svelte-1s3nj47-style")||((t=b("style")).id="svelte-1s3nj47-style",t.textContent=".tab-list.svelte-1s3nj47{border-bottom:1px solid var(--gray-border);display:flex;flex-wrap:wrap}",m(document.head,t)),ee(this,e,pe,de,l,{})}};function me(e){let t;const n=e[5].default,i=h(n,e,e[4],null);return{c(){i&&i.c()},m(e,n){i&&i.m(e,n),t=!0},p(e,t){i&&i.p&&16&t&&i.p(d(n,e,e[4],null),p(n,e[4],t,null))},i(e){t||(F(i,e),t=!0)},o(e){Y(i,e),t=!1},d(e){i&&i.d(e)}}}function fe(e){let t,n,i=e[0]===e[1]&&me(e);return{c(){i&&i.c(),t=k()},m(e,r){i&&i.m(e,r),f(e,t,r),n=!0},p(e,[n]){e[0]===e[1]?i?(i.p(e,n),F(i,1)):(i=me(e),i.c(),F(i,1),i.m(t.parentNode,t)):i&&(V(),Y(i,1,1,()=>{i=null}),G())},i(e){n||(F(i),n=!0)},o(e){Y(i),n=!1},d(e){i&&i.d(e),e&&v(t)}}}function ve(e,t,n){let i;const r={},{registerPanel:a,selectedPanel:o}=P(ce);u(e,o,e=>n(0,i=e)),a(r);let{$$slots:s={},$$scope:l}=t;return e.$set=e=>{"$$scope"in e&&n(4,l=e.$$scope)},[i,r,o,a,l,s]}var ye=class extends te{constructor(e){super(),ee(this,e,ve,fe,l,{})}};function be(e){let t,n,i;const r=e[6].default,a=h(r,e,e[5],null);return{c(){t=b("button"),a&&a.c(),$(t,"class","svelte-m4f1z5"),I(t,"selected",e[0]===e[1])},m(r,o){f(r,t,o),a&&a.m(t,null),n=!0,i=E(t,"click",e[7])},p(e,[n]){a&&a.p&&32&n&&a.p(d(r,e,e[5],null),p(r,e[5],n,null)),3&n&&I(t,"selected",e[0]===e[1])},i(e){n||(F(a,e),n=!0)},o(e){Y(a,e),n=!1},d(e){e&&v(t),a&&a.d(e),i()}}}function we(e,t,n){let i;const r={},{registerTab:a,selectTab:o,selectedTab:s}=P(ce);u(e,s,e=>n(0,i=e)),a(r);let{$$slots:l={},$$scope:c}=t;return e.$set=e=>{"$$scope"in e&&n(5,c=e.$$scope)},[i,r,o,s,a,c,l,()=>o(r)]}var xe=class extends te{constructor(e){var t;super(),document.getElementById("svelte-m4f1z5-style")||((t=b("style")).id="svelte-m4f1z5-style",t.textContent="button.svelte-m4f1z5{background:none;border:none;border-radius:0;margin:0;color:#bbb;font-size:1em;padding:1em;cursor:pointer;flex:1;border-bottom:3px solid var(--gray-bg)}button.svelte-m4f1z5:focus{outline:0}.selected.svelte-m4f1z5{border-bottom:3px solid var(--orange);color:#333}",m(document.head,t)),ee(this,e,we,be,l,{})}};function ke(e,t,n){const i=e.slice();return i[1]=t[n],i}function Ee(e,t,n){const i=e.slice();return i[4]=t[n],i}function $e(e,t,n){const i=e.slice();return i[7]=t[n],i}function ze(e){let t,n,i,r=e[7]+"";return{c(){t=b("li"),n=w(r),i=x(),$(t,"class","svelte-ez734h")},m(e,r){f(e,t,r),m(t,n),m(t,i)},p(e,t){1&t&&r!==(r=e[7]+"")&&z(n,r)},d(e){e&&v(t)}}}function Ce(e){let t,n,i,r=e[4]+"";return{c(){t=b("li"),n=w(r),i=x(),$(t,"class","svelte-ez734h")},m(e,r){f(e,t,r),m(t,n),m(t,i)},p(e,t){1&t&&r!==(r=e[4]+"")&&z(n,r)},d(e){e&&v(t)}}}function Te(e){let t,n,i,r,a,o,s,l,c,u,h,d,p,g,y=e[1].title+"",k=e[1].description+"";return{c(){t=b("div"),n=b("a"),i=b("img"),o=x(),s=b("div"),l=b("a"),c=w(y),h=x(),d=b("div"),p=w(k),g=x(),i.src!==(r="images/application-tabs/"+e[1].image)&&$(i,"src",r),$(i,"class","svelte-ez734h"),$(n,"href",a=e[1].url),$(n,"class","svelte-ez734h"),$(l,"href",u=e[1].url),$(s,"class","example-title svelte-ez734h"),$(d,"class","example-description svelte-ez734h"),$(t,"class","example svelte-ez734h")},m(e,r){f(e,t,r),m(t,n),m(n,i),m(t,o),m(t,s),m(s,l),m(l,c),m(t,h),m(t,d),m(d,p),m(t,g)},p(e,t){1&t&&i.src!==(r="images/application-tabs/"+e[1].image)&&$(i,"src",r),1&t&&a!==(a=e[1].url)&&$(n,"href",a),1&t&&y!==(y=e[1].title+"")&&z(c,y),1&t&&u!==(u=e[1].url)&&$(l,"href",u),1&t&&k!==(k=e[1].description+"")&&z(p,k)},d(e){e&&v(t)}}}function Ie(e){let t,n,r,a,o,s,l,c,u,h,d,p,g,k,E,C,T,I,j,A,M,S,P,B,_=e[0].title+"",H=e[0].description+"",D=e[0].opportunities,q=[];for(let t=0;t<D.length;t+=1)q[t]=ze($e(e,D,t));let K=e[0].challenges,R=[];for(let t=0;t<K.length;t+=1)R[t]=Ce(Ee(e,K,t));let L=e[0].examples,O=[];for(let t=0;t<L.length;t+=1)O[t]=Te(ke(e,L,t));return{c(){t=b("div"),n=b("div"),r=b("h3"),a=w(_),o=x(),s=b("div"),l=w(H),c=x(),u=b("div"),h=b("div"),d=b("h4"),d.textContent="Opportunities",p=x(),g=b("ul");for(let e=0;e<q.length;e+=1)q[e].c();k=x(),E=b("br"),C=x(),T=b("div"),I=b("h4"),I.textContent="Challenges",j=x(),A=b("ul");for(let e=0;e<R.length;e+=1)R[e].c();M=x(),S=b("br"),P=x(),B=b("div");for(let e=0;e<O.length;e+=1)O[e].c();$(r,"class","application-title svelte-ez734h"),$(s,"class","application-description"),$(n,"class","left svelte-ez734h"),$(d,"class","opportunities-title svelte-ez734h"),$(g,"class","svelte-ez734h"),$(h,"class","application-opportunities svelte-ez734h"),$(I,"class","challenges-title svelte-ez734h"),$(A,"class","svelte-ez734h"),$(T,"class","application-challenges svelte-ez734h"),$(u,"class","right svelte-ez734h"),$(B,"class","bottom svelte-ez734h"),$(t,"class","application svelte-ez734h")},m(e,i){f(e,t,i),m(t,n),m(n,r),m(r,a),m(n,o),m(n,s),m(s,l),m(t,c),m(t,u),m(u,h),m(h,d),m(h,p),m(h,g);for(let e=0;e<q.length;e+=1)q[e].m(g,null);m(u,k),m(u,E),m(u,C),m(u,T),m(T,I),m(T,j),m(T,A);for(let e=0;e<R.length;e+=1)R[e].m(A,null);m(t,M),m(t,S),m(t,P),m(t,B);for(let e=0;e<O.length;e+=1)O[e].m(B,null)},p(e,[t]){if(1&t&&_!==(_=e[0].title+"")&&z(a,_),1&t&&H!==(H=e[0].description+"")&&z(l,H),1&t){let n;for(D=e[0].opportunities,n=0;n<D.length;n+=1){const i=$e(e,D,n);q[n]?q[n].p(i,t):(q[n]=ze(i),q[n].c(),q[n].m(g,null))}for(;n<q.length;n+=1)q[n].d(1);q.length=D.length}if(1&t){let n;for(K=e[0].challenges,n=0;n<K.length;n+=1){const i=Ee(e,K,n);R[n]?R[n].p(i,t):(R[n]=Ce(i),R[n].c(),R[n].m(A,null))}for(;n<R.length;n+=1)R[n].d(1);R.length=K.length}if(1&t){let n;for(L=e[0].examples,n=0;n<L.length;n+=1){const i=ke(e,L,n);O[n]?O[n].p(i,t):(O[n]=Te(i),O[n].c(),O[n].m(B,null))}for(;n<O.length;n+=1)O[n].d(1);O.length=L.length}},i:i,o:i,d(e){e&&v(t),y(q,e),y(R,e),y(O,e)}}}function je(e,t,n){let{applicationData:i}=t;return e.$set=e=>{"applicationData"in e&&n(0,i=e.applicationData)},[i]}var Ae=class extends te{constructor(e){var t;super(),document.getElementById("svelte-ez734h-style")||((t=b("style")).id="svelte-ez734h-style",t.textContent=".application.svelte-ez734h.svelte-ez734h{padding:1.5em;display:grid;grid-template-columns:repeat(8, 1fr);grid-column-gap:2em}.left.svelte-ez734h.svelte-ez734h{grid-column-start:1;grid-column-end:6}.right.svelte-ez734h.svelte-ez734h{grid-column-start:6;grid-column-end:9}.bottom.svelte-ez734h.svelte-ez734h{grid-column-start:1;grid-column-end:9;display:grid;grid-template-columns:repeat(3, 1fr);grid-column-gap:1.5em}.application-title.svelte-ez734h.svelte-ez734h{margin-top:0}.application-opportunities.svelte-ez734h.svelte-ez734h,.application-challenges.svelte-ez734h.svelte-ez734h{grid-column-start:6;grid-column-end:9}.opportunities-title.svelte-ez734h.svelte-ez734h,.challenges-title.svelte-ez734h.svelte-ez734h{margin-top:0;margin-bottom:1em}.example-title.svelte-ez734h.svelte-ez734h{margin-bottom:0.5em}ul.svelte-ez734h.svelte-ez734h{line-height:1.2em}li.svelte-ez734h.svelte-ez734h{margin-bottom:0.8em}.example-description.svelte-ez734h.svelte-ez734h{font-size:0.8em;line-height:1.4em;color:var(--gray)}img.svelte-ez734h.svelte-ez734h{width:100%;border:1px solid var(--gray-border)\n\t}.example.svelte-ez734h>a.svelte-ez734h{border-bottom:none}",m(document.head,t)),ee(this,e,je,Ie,l,{applicationData:0})}},Me=n(0);function Se(e,t,n){const i=e.slice();return i[0]=t[n],i}function Pe(e,t,n){const i=e.slice();return i[0]=t[n],i}function Be(e){let t,n,r=e[0].title+"";return{c(){t=w(r),n=x()},m(e,i){f(e,t,i),f(e,n,i)},p:i,d(e){e&&v(t),e&&v(n)}}}function _e(e){let t;const n=new xe({props:{$$slots:{default:[Be]},$$scope:{ctx:e}}});return{c(){X(n.$$.fragment)},m(e,i){Z(n,e,i),t=!0},p(e,t){const i={};32&t&&(i.$$scope={dirty:t,ctx:e}),n.$set(i)},i(e){t||(F(n.$$.fragment,e),t=!0)},o(e){Y(n.$$.fragment,e),t=!1},d(e){Q(n,e)}}}function He(e){let t,n,i=Me,r=[];for(let t=0;t<i.length;t+=1)r[t]=_e(Pe(e,i,t));const a=e=>Y(r[e],1,1,()=>{r[e]=null});return{c(){for(let e=0;e<r.length;e+=1)r[e].c();t=k()},m(e,i){for(let t=0;t<r.length;t+=1)r[t].m(e,i);f(e,t,i),n=!0},p(e,n){if(0&n){let o;for(i=Me,o=0;o<i.length;o+=1){const a=Pe(e,i,o);r[o]?(r[o].p(a,n),F(r[o],1)):(r[o]=_e(a),r[o].c(),F(r[o],1),r[o].m(t.parentNode,t))}for(V(),o=i.length;o<r.length;o+=1)a(o);G()}},i(e){if(!n){for(let e=0;e<i.length;e+=1)F(r[e]);n=!0}},o(e){r=r.filter(Boolean);for(let e=0;e<r.length;e+=1)Y(r[e]);n=!1},d(e){y(r,e),e&&v(t)}}}function De(e){let t,n;const r=new Ae({props:{applicationData:e[0]}});return{c(){X(r.$$.fragment),t=x()},m(e,i){Z(r,e,i),f(e,t,i),n=!0},p:i,i(e){n||(F(r.$$.fragment,e),n=!0)},o(e){Y(r.$$.fragment,e),n=!1},d(e){Q(r,e),e&&v(t)}}}function qe(e){let t;const n=new ye({props:{$$slots:{default:[De]},$$scope:{ctx:e}}});return{c(){X(n.$$.fragment)},m(e,i){Z(n,e,i),t=!0},p(e,t){const i={};32&t&&(i.$$scope={dirty:t,ctx:e}),n.$set(i)},i(e){t||(F(n.$$.fragment,e),t=!0)},o(e){Y(n.$$.fragment,e),t=!1},d(e){Q(n,e)}}}function Ke(e){let t,n,i;const r=new ge({props:{$$slots:{default:[He]},$$scope:{ctx:e}}});let a=Me,o=[];for(let t=0;t<a.length;t+=1)o[t]=qe(Se(e,a,t));const s=e=>Y(o[e],1,1,()=>{o[e]=null});return{c(){X(r.$$.fragment),t=x();for(let e=0;e<o.length;e+=1)o[e].c();n=k()},m(e,a){Z(r,e,a),f(e,t,a);for(let t=0;t<o.length;t+=1)o[t].m(e,a);f(e,n,a),i=!0},p(e,t){const i={};if(32&t&&(i.$$scope={dirty:t,ctx:e}),r.$set(i),0&t){let i;for(a=Me,i=0;i<a.length;i+=1){const r=Se(e,a,i);o[i]?(o[i].p(r,t),F(o[i],1)):(o[i]=qe(r),o[i].c(),F(o[i],1),o[i].m(n.parentNode,n))}for(V(),i=a.length;i<o.length;i+=1)s(i);G()}},i(e){if(!i){F(r.$$.fragment,e);for(let e=0;e<a.length;e+=1)F(o[e]);i=!0}},o(e){Y(r.$$.fragment,e),o=o.filter(Boolean);for(let e=0;e<o.length;e+=1)Y(o[e]);i=!1},d(e){Q(r,e),e&&v(t),y(o,e),e&&v(n)}}}function Re(e){let t;const n=new he({props:{$$slots:{default:[Ke]},$$scope:{ctx:e}}});return{c(){X(n.$$.fragment)},m(e,i){Z(n,e,i),t=!0},p(e,[t]){const i={};32&t&&(i.$$scope={dirty:t,ctx:e}),n.$set(i)},i(e){t||(F(n.$$.fragment,e),t=!0)},o(e){Y(n.$$.fragment,e),t=!1},d(e){Q(n,e)}}}var Le=class extends te{constructor(e){super(),ee(this,e,null,Re,l,{})}};function Oe(e,t,n){const i=e.slice();return i[9]=t[n],i[11]=n,i}function Je(e){let t,n,i,r;function a(...t){return e[8](e[11],...t)}return{c(){t=b("img"),t.src!==(n="images/horse/"+e[9]+".jpg")&&$(t,"src",n),$(t,"alt","Horse running."),$(t,"class",i=g(e[9]===e[0]?"frame active-frame":"frame")+" svelte-17v4g3t")},m(e,n){f(e,t,n),r=E(t,"mouseover",a)},p(n,r){e=n,1&r&&i!==(i=g(e[9]===e[0]?"frame active-frame":"frame")+" svelte-17v4g3t")&&$(t,"class",i)},d(e){e&&v(t),r()}}}function Ne(e){let t,n,r,a,l,c,u,h,d,p,g,k,I,j,A,M,S,P,B,_=e[1]?"pause_circle_outline":"play_circle_outline",H=e[2],D=[];for(let t=0;t<H.length;t+=1)D[t]=Je(Oe(e,H,t));return{c(){t=b("div"),n=b("div"),r=b("img"),l=x(),c=b("div"),u=b("figcaption"),u.innerHTML="\n                In 1878, Eadweard Muybridge settled Leland Stanford&#39;s hotly debated question of whether all four feet of a horse lifted off the ground during a trot using multiple cameras to capture motion in stop-motion photographs.\n                This interactive graphic uses <i>animation</i> and <i>multiple representations</i> to illustrate this finding.\n             ",h=x(),d=b("div"),p=b("label"),g=b("input"),k=x(),I=b("div"),j=b("button"),A=b("i"),M=w(_),S=x(),P=b("div");for(let e=0;e<D.length;e+=1)D[e].c();$(r,"id","horse"),r.src!==(a="images/horse/"+e[0]+".jpg")&&$(r,"src",a),$(r,"alt","Horse running."),$(r,"class","svelte-17v4g3t"),$(g,"type","range"),$(g,"min","1"),$(g,"max","11"),$(g,"class","slider svelte-17v4g3t"),T(d,"padding-bottom","5px"),$(A,"class","material-icons"),T(A,"font-size","48px"),$(j,"class","svelte-17v4g3t"),$(c,"id","horse-controls"),$(c,"class","svelte-17v4g3t"),$(n,"id","horse-wrapper"),$(n,"class","svelte-17v4g3t"),$(P,"id","frames"),$(P,"class","svelte-17v4g3t"),$(t,"id","wrapper"),$(t,"class","svelte-17v4g3t")},m(i,a){f(i,t,a),m(t,n),m(n,r),m(n,l),m(n,c),m(c,u),m(c,h),m(c,d),m(d,p),m(p,g),C(g,e[0]),m(c,k),m(c,I),m(I,j),m(j,A),m(A,M),m(t,S),m(t,P);for(let e=0;e<D.length;e+=1)D[e].m(P,null);B=[E(g,"change",e[7]),E(g,"input",e[7]),E(g,"mousedown",e[4]),E(j,"click",(function(){s(e[1]?e[4]:e[3])&&(e[1]?e[4]:e[3]).apply(this,arguments)}))]},p(t,[n]){if(e=t,1&n&&r.src!==(a="images/horse/"+e[0]+".jpg")&&$(r,"src",a),1&n&&C(g,e[0]),2&n&&_!==(_=e[1]?"pause_circle_outline":"play_circle_outline")&&z(M,_),37&n){let t;for(H=e[2],t=0;t<H.length;t+=1){const i=Oe(e,H,t);D[t]?D[t].p(i,n):(D[t]=Je(i),D[t].c(),D[t].m(P,null))}for(;t<D.length;t+=1)D[t].d(1);D.length=H.length}},i:i,o:i,d(e){e&&v(t),y(D,e),o(B)}}}function We(e,t,n){let i=1,r=!1;const a=Array.from(new Array(11),(e,t)=>t+1);let o;function s(){r||(n(1,r=!0),o=setInterval(()=>{n(0,i%=11),n(0,i+=1)},100))}function l(){n(1,r=!1),clearInterval(o)}function c(e){l(),n(0,i=e)}s();return[i,r,a,s,l,c,o,function(){var e;e=this.value,i=""===e?void 0:+e,n(0,i)},e=>c(e+1)]}var Ve=class extends te{constructor(e){var t;super(),document.getElementById("svelte-17v4g3t-style")||((t=b("style")).id="svelte-17v4g3t-style",t.textContent="#wrapper.svelte-17v4g3t{margin-top:1.5em;margin-bottom:1.5em}#frames.svelte-17v4g3t{display:grid;grid-template-columns:repeat(11, 1fr);grid-column-gap:0.2em;padding-top:10px}.frame.svelte-17v4g3t{width:100%;filter:brightness(60%);cursor:crosshair}.active-frame.svelte-17v4g3t{border-bottom:3px solid var(--orange);padding-bottom:2px;filter:brightness(100%)}#horse-wrapper.svelte-17v4g3t{display:grid;grid-template-columns:repeat(12, 1fr);grid-column-gap:2em}#horse.svelte-17v4g3t{grid-column-start:1;grid-column-end:7;width:100%}#horse-controls.svelte-17v4g3t{grid-column-start:7;grid-column-end:13;display:flex;flex-direction:column;justify-content:center;text-align:left}.slider.svelte-17v4g3t{-webkit-appearance:none;appearance:none;outline:none;opacity:0.7;-webkit-transition:.2s;transition:opacity .2s;height:3px;border-radius:2px;background-color:hsla(0, 0%, 0%, 0.2)}.slider.svelte-17v4g3t:hover{opacity:1}.slider.svelte-17v4g3t::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;cursor:pointer;top:-6px;left:-6px;width:13px;height:13px;background-color:var(--orange);border-radius:50%}.slider.svelte-17v4g3t::-moz-range-thumb{top:-6px;left:-6px;width:13px;height:13px;background-color:var(--orange);cursor:pointer}button.svelte-17v4g3t{border:none;padding:0;cursor:pointer;outline:inherit;color:var(--orange)}@media(min-width: 768px){#horse-controls.svelte-17v4g3t{grid-column-start:7;grid-column-end:11}}",m(document.head,t)),ee(this,e,We,Ne,l,{})}};function Ge(e){let t;return{c(){t=b("div"),t.textContent="gutter test",$(t,"class","svelte-5jrnp3")},m(e,n){f(e,t,n)},p:i,i:i,o:i,d(e){e&&v(t)}}}var Fe=class extends te{constructor(e){var t;super(),document.getElementById("svelte-5jrnp3-style")||((t=b("style")).id="svelte-5jrnp3-style",t.textContent="div.svelte-5jrnp3{grid-column-start:2;grid-column-end:4}",m(document.head,t)),ee(this,e,null,Ge,l,{})}},Ye=n(1),Ue=n.n(Ye);function Xe(e,t,n){const i=e.slice();return i[2]=t[n],i}function Ze(e){let t,n,r=e[2].entryTags.title+"";return{c(){t=b("div"),n=w(r)},m(e,i){f(e,t,i),m(t,n)},p:i,d(e){e&&v(t)}}}function Qe(e){let t,n=e[0],r=[];for(let t=0;t<n.length;t+=1)r[t]=Ze(Xe(e,n,t));return{c(){t=b("div");for(let e=0;e<r.length;e+=1)r[e].c();$(t,"id","example-table-wrapper"),$(t,"class","svelte-1137zz2")},m(e,n){f(e,t,n);for(let e=0;e<r.length;e+=1)r[e].m(t,null)},p(e,[i]){if(1&i){let a;for(n=e[0],a=0;a<n.length;a+=1){const o=Xe(e,n,a);r[a]?r[a].p(o,i):(r[a]=Ze(o),r[a].c(),r[a].m(t,null))}for(;a<r.length;a+=1)r[a].d(1);r.length=n.length}},i:i,o:i,d(e){e&&v(t),y(r,e)}}}function et(e){let t=Ue.a.toJSON("@article{conlen2019launching,\n  title={Launching the Parametric Press},\n  author={Conlen, Matthew and Hohman, Fred},\n  journal={Visualization for Communication (VisComm) at IEEE VIS},\n  year={2019},\n  url={https://parametric.press}\n}\n\n@article{conlen2018dr,\n  author={Conlen, Matthew and Hohman, Fred},\n  title={The beginner's guide to dimensionality reduction},\n  journal={Workshop on Visualization for AI Explainability (VISxAI) at IEEE VIS},\n  year={2018},\n  url={https://idyll.pub/post/dimensionality-reduction-293e465c2a3443e8941b016d/}\n}\n\n@inproceedings{shneiderman1996eyes,\n  title={The eyes have it: A task by data type taxonomy for information visualizations},\n  author={Shneiderman, Ben},\n  booktitle={Proceedings 1996 IEEE Symposium on Visual Languages},\n  pages={336--343},\n  year={1996},\n  organization={IEEE}\n}\n\n@inproceedings{rauschenbach1998progressive,\n  title={Progressive image transmission using levels of detail and regions of interest},\n  author={Rauschenbach, Uwe},\n  booktitle={Proc. IASTED Conf. on Computer Graphics and Imaging-CGIM},\n  volume={98},\n  year={1998},\n  organization={Citeseer}\n}\n\n@article{rauschenbach1999demand,\n  title={Demand-driven image transmission with levels of detail and regions of interest},\n  author={Rauschenbach, Uwe and Schumann, Heidrun},\n  journal={Computers \\& Graphics},\n  volume={23},\n  number={6},\n  pages={857--866},\n  year={1999},\n  publisher={Elsevier}\n}\n\n@inproceedings{moritz2017trust,\n  title={Trust, but verify: Optimistic visualizations of approximate queries for exploring big data},\n  author={Moritz, Dominik and Fisher, Danyel and Ding, Bolin and Wang, Chi},\n  booktitle={Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems},\n  pages={2904--2915},\n  year={2017},\n  organization={ACM}\n}\n\n@article{keim2002information,\n  title={Information visualization and visual data mining},\n  author={Keim, Daniel A},\n  journal={IEEE Transactions on Visualization and Computer Graphics},\n  volume={8},\n  number={1},\n  pages={1--8},\n  year={2002},\n  publisher={IEEE}\n}\n\n@inproceedings{craft2005beyond,\n  title={Beyond guidelines: What can we learn from the visual information seeking mantra?},\n  author={Craft, Brock and Cairns, Paul},\n  booktitle={Ninth International Conference on Information Visualisation (IV'05)},\n  pages={110--118},\n  year={2005},\n  organization={IEEE}\n}\n\n@article{whitehouse2017find,\n  title={Find Out If Your Job Will Be Automated},\n  author={Whitehouse, Mark and Rojanasakul, Mira},\n  journal={Bloomberg},\n  year={2017},\n  url={https://www.bloomberg.com/graphics/2017-job-risk/}\n}\n\n@article{ala2018how,\n  title={How does the eye work?},\n  author={Ala’, Andrew, Jason, Peter, Tanya},\n  journal={Explorable Explanations Game Jam},\n  year={2018},\n  url={https://idyll-lang.org/gallery/how-does-the-eye-work}\n}\n\n@article{wikipedia2018preview,\n  title={Wikipedia Preview Card},\n  journal={Wikipedia},\n  year={2018},\n  note={https://blog.wikimedia.org/2018/04/20/why-it-took-a-long-time-to-build-that-tiny-link-preview-on-wikipedia/},\n  url={https://www.mediawiki.org/wiki/Page_Previews}\n}\n\n@article{tversky2002animation,\n  title={Animation: Can it facilitate?},\n  author={Tversky, Barbara and Morrison, Julie Bauer and Betrancourt, Mireille},\n  journal={International Journal of Human-computer Studies},\n  volume={57},\n  number={4},\n  pages={247--262},\n  year={2002},\n  publisher={Elsevier}\n}\n\n@article{heer2007animated,\n  title={Animated transitions in statistical data graphics},\n  author={Heer, Jeffrey and Robertson, George},\n  journal={IEEE Transactions on Visualization and Computer Graphics},\n  volume={13},\n  number={6},\n  pages={1240--1247},\n  year={2007},\n  publisher={IEEE}\n}\n\n@article{hullman2015hypothetical,\n  title={Hypothetical outcome plots outperform error bars and violin plots for inferences about reliability of variable ordering},\n  author={Hullman, Jessica and Resnick, Paul and Adar, Eytan},\n  journal={PlOS One},\n  volume={10},\n  number={11},\n  pages={e0142444},\n  year={2015},\n  publisher={Public Library of Science}\n}\n\n@book{thomas1995illusion,\n  title={The illusion of life: Disney animation},\n  author={Thomas, Frank and Johnston, Ollie and Thomas, Frank},\n  year={1995},\n  publisher={Hyperion New York}\n}\n\n@article{michotte1946perception,\n  title={La perception de la causalit{\\'e}.(Etudes Psychol.), Vol. VI},\n  author={Michotte, Albert},\n  year={1946},\n  publisher={Inst. Sup. De Philosophie}\n}\n\n@article{muybridge1882horse,\n  title={The horse in motion},\n  author={Muybridge, J},\n  journal={Nature},\n  volume={25},\n  number={652},\n  pages={605},\n  year={1882},\n  publisher={Nature Publishing Group}\n}\n\n@article{baker2019emergent,\n  title={Emergent tool use from multi-agent autocurricula},\n  author={Baker, Bowen and Kanitscheider, Ingmar and Markov, Todor and Wu, Yi and Powell, Glenn and McGrew, Bob and Mordatch, Igor},\n  journal={arXiv preprint arXiv:1909.07528},\n  year={2019}\n}\n\n@inproceedings{kim2017explaining,\n  title={Explaining the gap: Visualizing one's predictions improves recall and comprehension of data},\n  author={Kim, Yea-Seul and Reinecke, Katharina and Hullman, Jessica},\n  booktitle={Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems},\n  pages={1375--1386},\n  year={2017},\n  organization={ACM}\n}\n\n@article{chi1989self,\n  title={Self-explanations: How students study and use examples in learning to solve problems},\n  author={Chi, Michelene TH and Bassok, Miriam and Lewis, Matthew W and Reimann, Peter and Glaser, Robert},\n  journal={Cognitive Science},\n  volume={13},\n  number={2},\n  pages={145--182},\n  year={1989},\n  publisher={Elsevier}\n}\n\n@article{chi2000self,\n  title={Self-explaining expository texts: The dual processes of generating inferences and repairing mental models},\n  author={Chi, Michelene TH},\n  journal={Advances in Instructional Psychology},\n  volume={5},\n  pages={161--238},\n  year={2000}\n}\n\n@article{kim2017data,\n  title={Data through others' eyes: The impact of visualizing others' expectations on visualization interpretation},\n  author={Kim, Yea-Seul and Reinecke, Katharina and Hullman, Jessica},\n  journal={IEEE Transactions on Visualization and Computer Graphics},\n  volume={24},\n  number={1},\n  pages={760--769},\n  year={2017},\n  publisher={IEEE}\n}\n\n@article{kim2017data,\n  title={Data through others' eyes: The impact of visualizing others' expectations on visualization interpretation},\n  author={Kim, Yea-Seul and Reinecke, Katharina and Hullman, Jessica},\n  journal={IEEE Transactions on Visualization and Computer Graphics},\n  volume={24},\n  number={1},\n  pages={760--769},\n  year={2017},\n  publisher={IEEE}\n}\n\n@article{powell2015image,\n  title={Image kernels},\n  author={Victor Powell},\n  journal={Explained Visually, Setosa},\n  year={2015},\n  url={http://setosa.io/ev/image-kernels/}\n}\n\n@article{azad2017colorized,\n  title={Colorized math equations},\n  author={Kalid Azad},\n  journal={Better Explained},\n  year={2017},\n  url={https://betterexplained.com/articles/colorized-math-equations/}\n}\n\n@article{gingold2015earth,\n  title={Earth primer},\n  author={Chaim Gingold},\n  year={2015},\n  url={https://www.earthprimer.com/}\n}\n\n@article{nelson1967stretchtext,\n  title={Stretchtext – hypertext note #8},\n  author={Ted Nelson},\n  year={1967},\n  journal={Project Xanadu}\n}\n\n@article{beecroft2019on,\n  title={On variable level-of-detail documents},\n  author={Weston Beecroft},\n  year={Accessed in 2019},\n  url={http://symbolflux.com/lodessay/}\n}\n\n@article{basques2018ui,\n  title={A ui that lets readers control how much information they see},\n  author={Kayce Basques},\n  year={2018},\n  url={https://kayce.basqu.es/blog/information-control?curator=theedge}\n}\n\n@article{karpicke2008critical,\n  title={The critical importance of retrieval for learning},\n  author={Karpicke, Jeffrey D and Roediger, Henry L},\n  journal={Science},\n  volume={319},\n  number={5865},\n  pages={966--968},\n  year={2008},\n  publisher={American Association for the Advancement of Science}\n}\n\n@book{gates1922recitation,\n  title={Recitation as a factor in memorizing},\n  author={Gates, Arthur Irving},\n  number={40},\n  year={1922},\n  publisher={Science Press}\n}\n\n@article{roediger2006power,\n  title={The power of testing memory: Basic research and implications for educational practice},\n  author={Roediger III, Henry L and Karpicke, Jeffrey D},\n  journal={Perspectives on Psychological Science},\n  volume={1},\n  number={3},\n  pages={181--210},\n  year={2006},\n  publisher={SAGE Publications Sage CA: Los Angeles, CA}\n}\n\n\n@article{bangert1991instructional,\n  title={The instructional effect of feedback in test-like events},\n  author={Bangert-Drowns, Robert L and Kulik, Chen-Lin C and Kulik, James A and Morgan, MaryTeresa},\n  journal={Review of Educational Research},\n  volume={61},\n  number={2},\n  pages={213--238},\n  year={1991},\n  publisher={Sage Publications Sage CA: Thousand Oaks, CA}\n}\n\n@inproceedings{sizemore2011interactive,\n  title={Interactive non-fiction: Towards a new approach for storytelling in digital journalism},\n  author={Sizemore, J Hunter and Zhu, Jichen},\n  booktitle={International Conference on Interactive Digital Storytelling},\n  pages={313--316},\n  year={2011},\n  organization={Springer}\n}\n\n@article{segel2010narrative,\n  title={Narrative visualization: Telling stories with data},\n  author={Segel, Edward and Heer, Jeffrey},\n  journal={IEEE Transactions on Visualization and Computer Graphics},\n  volume={16},\n  number={6},\n  pages={1139--1148},\n  year={2010},\n  publisher={IEEE}\n}\n\n@book{bogost2012newsgames,\n  title={Newsgames: Journalism at play},\n  author={Bogost, Ian and Ferrari, Simon and Schweizer, Bobby},\n  year={2012},\n  publisher={Mit Press}\n}\n\n@article{squire2011video,\n  title={Video games and learning},\n  author={Squire, Kurt},\n  journal={Teaching and Participatory Culture in the Digital Age},\n  year={2011},\n  publisher={Teachers College Print}\n}\n\n@article{virvou2005combining,\n  title={Combining software games with education: Evaluation of its educational effectiveness},\n  author={Virvou, Maria and Katsionis, George and Manos, Konstantinos},\n  journal={Journal of Educational Technology \\& Society},\n  volume={8},\n  number={2},\n  pages={54--65},\n  year={2005},\n  publisher={JSTOR}\n}\n\n@book{adler2014read,\n  title={How to read a book: The classic guide to intelligent reading},\n  author={Adler, Mortimer J and Van Doren, Charles},\n  year={2014},\n  publisher={Simon and Schuster}\n}\n\n@article{ynnerman2018exploranation,\n  title={Exploranation: A new science communication paradigm},\n  author={Ynnerman, Anders and L{\\\"o}wgren, Jonas and Tibell, Lena},\n  journal={IEEE computer graphics and applications},\n  volume={38},\n  number={3},\n  pages={13--20},\n  year={2018},\n  publisher={IEEE}\n}\n\n@article{victor2011scientific,\n  title={Scientific communication as sequential art},\n  author={Victor, Bret},\n  year={2011},\n  url={http://worrydream.com/ScientificCommunicationAsSequentialArt}\n}\n\n@article{victor2011explorable,\n  title={Explorable explanations},\n  author={Victor, Bret},\n  year={2011},\n  url={http://worrydream.com/ExplorableExplanations/}\n}\n\n@article{olah2017research,\n  author = {Olah, Chris and Carter, Shan},\n  title = {Research debt},\n  journal = {Distill},\n  year = {2017},\n  note = {https://distill.pub/2017/research-debt},\n  doi = {10.23915/distill.00005}\n}\n\n@inproceedings{dragicevic2019increasing,\n  title={Increasing the transparency of research papers with explorable multiverse analyses},\n  author={Dragicevic, Pierre and Jansen, Yvonne and Sarma, Abhraneel and Kay, Matthew and Chevalier, Fanny},\n  booktitle={Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems},\n  pages={65},\n  year={2019},\n  organization={ACM},\n  url={https://explorablemultiverse.github.io}\n}\n\n@article{wattenberg2016use,\n  title={How to use t-SNE effectively},\n  author={Wattenberg, Martin and Vi{\\'e}gas, Fernanda and Johnson, Ian},\n  journal={Distill},\n  volume={1},\n  number={10},\n  pages={e2},\n  year={2016},\n  url={https://distill.pub/2016/misread-tsne/}\n}\n\n@article{barry2015should,\n  title={Should prison sentences be based on crimes that haven’t been committed yet?},\n  author={Barry-Jester, Anna Maria and Casselman, Ben and Goldstein, Dana},\n  journal={FiveThirtyEight},\n  year={2015},\n  url={https://fivethirtyeight.com/features/prison-reform-risk-assessment/}\n}\n\n@article{yau2016how,\n  title={How you will die},\n  author={Nathan Yau},\n  journal={Flowing Data},\n  year={2016},\n  url={https://flowingdata.com/2016/01/19/how-you-will-die/}\n}\n\n@article{kahng2018gan,\n  title={Gan lab: Understanding complex deep generative models using interactive visual experimentation},\n  author={Kahng, Minsuk and Thorat, Nikhil and Chau, Duen Horng Polo and Vi{\\'e}gas, Fernanda B and Wattenberg, Martin},\n  journal={IEEE Transactions on Visualization and Computer Graphics},\n  volume={25},\n  number={1},\n  pages={1--11},\n  year={2018},\n  publisher={IEEE},\n  url={https://poloclub.github.io/ganlab/}\n}\n\n@article{smilkov2019tensorflow,\n  title={Tensorflow.js: Machine learning for the web and beyond},\n  author={Smilkov, Daniel and Thorat, Nikhil and Assogba, Yannick and Yuan, Ann and Kreeger, Nick and Yu, Ping and Zhang, Kangyi and Cai, Shanqing and Nielsen, Eric and Soergel, David and others},\n  journal={arXiv preprint arXiv:1901.05350},\n  year={2019}\n}\n\n@article{smilkov2017direct,\n  title={Direct-manipulation visualization of deep networks},\n  author={Smilkov, Daniel and Carter, Shan and Sculley, D and Vi{\\'e}gas, Fernanda B and Wattenberg, Martin},\n  journal={arXiv preprint arXiv:1708.03788},\n  year={2017}\n}\n\n@article{barron2018designing,\n  title={Designing (and learning from) a teachable machine},\n  author={Webster, Barron},\n  journal={Google Design},\n  year={2018},\n  url={https://design.google/library/designing-and-learning-teachable-machine/}\n}\n\n@article{bianchi2019on,\n  title={On particle physics},\n  author={Bianchi, Riccardo Maria and Hohman, Fred and Conlen, Matthew},\n  year={2019},\n  journal={Parametric Press},\n  url={https://parametric.press/issue-01/on-particle-physics/}\n}\n\n@article{cordova1996intrinsic,\n  title={Intrinsic motivation and the process of learning: Beneficial effects of contextualization, personalization, and choice.},\n  author={Cordova, Diana I and Lepper, Mark R},\n  journal={Journal of Educational Psychology},\n  volume={88},\n  number={4},\n  pages={715},\n  year={1996},\n  publisher={American Psychological Association}\n}\n\n@inproceedings{di2006authoring,\n  title={Authoring and generation of individualized patient education materials},\n  author={Di Marco, Chrysanne and Bray, Peter and Covvey, H Dominic and Cowan, Donald D and Di Ciccio, Vic and Hovy, Eduard and Lipa, Joan and Yang, Cathy},\n  booktitle={AMIA Annual Symposium Proceedings},\n  volume={2006},\n  pages={195},\n  year={2006},\n  organization={American Medical Informatics Association}\n}\n\n@inproceedings{adar2017persalog,\n  title={PersaLog: Personalization of news article content},\n  author={Adar, Eytan and Gearig, Carolyn and Balasubramanian, Ayshwarya and Hullman, Jessica},\n  booktitle={Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems},\n  pages={3188--3200},\n  year={2017},\n  organization={ACM},\n  url={http://www.cond.org/persalog.html}\n}\n\n@inproceedings{kim2016generating,\n  title={Generating personalized spatial analogies for distances and areas},\n  author={Kim, Yea-Seul and Hullman, Jessica and Agrawala, Maneesh},\n  booktitle={Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems},\n  pages={38--48},\n  year={2016},\n  organization={ACM}\n}\n\n@article{popovich2018how,\n  title={How much hotter is your hometown than when you were born?},\n  author={Popvich, Nadja and Migliozzi, Blacki and Taylor, Rumsey and Williams, Josh and Watkins, Derek},\n  year={2018},\n  journal={The New York Times},\n  url={https://www.nytimes.com/interactive/2018/08/30/climate/how-much-hotter-is-your-hometown.html}\n}\n\n@article{daniels2018human,\n  title={Human terrain},\n  author={Daniels, Matthew},\n  year={2018},\n  journal={The Pudding},\n  url={https://pudding.cool/2018/10/city_3d/}\n}\n\n@article{quealy2019are,\n  title={Are you rich? This income-rank quiz might change how you see yourself},\n  author={Quealy, Kevin and Gebeloff, Robert and Taylor, Rumsey},\n  year={2019},\n  journal={The New York Times},\n  url={https://www.nytimes.com/interactive/2019/08/01/upshot/are-you-rich.html}\n}\n\n@article{chinoy2010quiz,\n  title={Quiz: Let us predict whether you’re a democrat or a republican},\n  author={Chinoy, Sahil},\n  year={2019},\n  journal={The New York Times},\n  url={https://www.nytimes.com/interactive/2019/08/08/opinion/sunday/party-polarization-quiz.html}\n}\n\n@inproceedings{zellweger1998fluid,\n  title={Fluid links for informed and incremental link transitions},\n  author={Zellweger, Polle and Chang, Bay-Wei and Mackinlay, Jock D},\n  journal={Proceedings of Hypertext},\n  year={1998}\n}\n\n@inproceedings{zellweger2002reading,\n  title={Reading and writing fluid hypertext narratives},\n  author={Zellweger, Polle T and Mangen, Anne and Newman, Paula},\n  booktitle={Proceedings of the Thirteenth ACM Conference on Hypertext and Hypermedia},\n  pages={45--54},\n  year={2002},\n  organization={ACM}\n}\n\n@article{might2010illustrated,\n  title={The illustrated guide to a Ph.D.},\n  author={Might, Matt},\n  url={http://matt.might.net/articles/phd-school-in-pictures/}\n}\n\n@article{wiki2019explorable,\n  title={Explorable explanation},\n  journal={Wikipedia},\n  url={https://en.wikipedia.org/wiki/Explorable_explanation},\n  year={2019},\n  howpublished={web},\n  tags={our, tags, here}\n}\n\n@article{case2014explorable,\n  title={Explorable explanations},\n  author={Case, Nicky},\n  year={2014},\n  url={https://blog.ncase.me/explorable-explanations/},\n  howpublished={web},\n  tags={our, tags, here}\n}\n").filter((function(e){return"web"===e.entryTags.howpublished}));return t.forEach(e=>{e.entryTags.tags&&(e.entryTags.tags=e.entryTags.tags.split(","))}),console.log(t),[t]}var tt=class extends te{constructor(e){var t;super(),document.getElementById("svelte-1137zz2-style")||((t=b("style")).id="svelte-1137zz2-style",t.textContent="#example-table-wrapper.svelte-1137zz2{height:500px;background-color:var(--gray-bg);border:1px solid var(--gray-border);border-radius:var(--border-radius);margin-bottom:1em}",m(document.head,t)),ee(this,e,et,Qe,l,{})}};new ie({target:document.getElementById("research-x-practice")}),new ae({target:document.getElementById("toc")}),new Le({target:document.getElementById("applications-tab")}),new Fe({target:document.getElementById("gutter-test")}),new Ve({target:document.getElementById("horse")}),new tt({target:document.getElementById("example-table")})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,